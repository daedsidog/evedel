;; -*- lexical-binding: t; -*-

(require 'ert)
(require 'evedel)
(require 'cl-lib)

(defmacro e::infix-isomorphic (infix prefix)
  `(should (equal (e::tag-query-prefix-from-infix ',infix)
                  ',prefix)))

(ert-deftest e::test-valid-prefix-from-infix-cases ()
  (e::infix-isomorphic (foo and not bar or baz)
                       (or (and foo (not bar)) baz))
  (e::infix-isomorphic (john or not [jane])
                       (or john (not [jane])))
  (e::infix-isomorphic (alice and bob and charlie)
                       (and alice bob charlie))
  (e::infix-isomorphic (foo) foo)
  (e::infix-isomorphic (foo bar baz not john)
                       (and foo bar baz (not john)))
  (e::infix-isomorphic ((foo)) foo)
  (e::infix-isomorphic (((foo))) foo)
  (e::infix-isomorphic (((foo foo foo)))
                       (and foo foo foo))
  (e::infix-isomorphic (not bar and baz)
                       (and (not bar) baz))
  (e::infix-isomorphic (bar or bar or baz)
                       (or bar bar baz))
  (e::infix-isomorphic (bar bar or baz)
                       (or (and bar bar) baz))
  (e::infix-isomorphic () nil)
  (e::infix-isomorphic ((())) nil)
  (e::infix-isomorphic (danny and (joey and boris))
                       (and danny (and joey boris)))
  (e::infix-isomorphic ((danny and (joey and boris)) and (foo or bar))
                       (and (and danny (and joey boris)) (or foo bar)))
  (e::infix-isomorphic ((alice or bob) and (charlie or dave))
                       (and (or alice bob) (or charlie dave)))
  (e::infix-isomorphic ((alice and bob) or (charlie and dave))
                       (or (and alice bob) (and charlie dave))))

(defmacro e::malformed-infix-query (query)
  `(should-error (e::tag-query-prefix-from-infix ',query)))

(ert-deftest e::test-invalid-prefix-from-infix-cases ()
  (e::malformed-infix-query (and))
  (e::malformed-infix-query (or))
  (e::malformed-infix-query (not))
  (e::malformed-infix-query (and foo))
  (e::malformed-infix-query (or foo))
  (e::malformed-infix-query (and foo or bar))
  (e::malformed-infix-query (or and foo bar))
  (e::malformed-infix-query (and (or foo) bar))
  (e::malformed-infix-query (foo (or bar)))
  (e::malformed-infix-query (foo or (and bar)))
  (e::malformed-infix-query (foo bar and (not)))
  (e::malformed-infix-query ((or bar)))
  (e::malformed-infix-query ((and foo)))
  (e::malformed-infix-query (foo or (and)))
  (e::malformed-infix-query (or ()))
  (e::malformed-infix-query (foo or not))
  (e::malformed-infix-query (and (and foo bar)))
  (e::malformed-infix-query (or (or(foo and bar)))))

;; Local Variables:
;; read-symbol-shorthands: (("e::" . "evedel--")
;;                          ("e:"  . "evedel-")
;;                          ("cl:" . "cl-")) 
;; End:
